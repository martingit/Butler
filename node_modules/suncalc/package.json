{
  "name": "suncalc",
  "version": "1.6.0",
  "description": "A tiny JavaScript library for calculating sun/moon positions and phases.",
  "homepage": "https://github.com/mourner/suncalc",
  "keywords": [
    "sun",
    "astronomy",
    "math",
    "calculation",
    "sunrise",
    "sunset",
    "twilight",
    "moon",
    "illumination"
  ],
  "author": {
    "name": "Vladimir Agafonkin"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mourner/suncalc.git"
  },
  "main": "suncalc.js",
  "devDependencies": {
    "tape": "^2.12.3",
    "jshint": "^2.5.0",
    "faucet": "0.0.1"
  },
  "scripts": {
    "test": "jshint suncalc.js test.js && node test.js | faucet",
    "cov": "istanbul cover test.js -x test.js"
  },
  "jshintConfig": {
    "quotmark": "single",
    "trailing": true,
    "unused": true
  },
  "readme": "\nSunCalc\n=======\n\nSunCalc is a tiny BSD-licensed JavaScript library for calculating sun position,\nsunlight phases (times for sunrise, sunset, dusk, etc.),\nmoon position and lunar phase for the given location and time,\ncreated by [Vladimir Agafonkin](http://agafonkin.com/en) ([@mourner](https://github.com/mourner))\nas a part of the [SunCalc.net project](http://suncalc.net).\n\nMost calculations are based on the formulas given in the excellent Astronomy Answers articles\nabout [position of the sun](http://aa.quae.nl/en/reken/zonpositie.html)\nand [the planets](http://aa.quae.nl/en/reken/hemelpositie.html).\nYou can read about different twilight phases calculated by SunCalc\nin the [Twilight article on Wikipedia](http://en.wikipedia.org/wiki/Twilight).\n\n\n## Usage example\n\n```javascript\n// get today's sunlight times for London\nvar times = SunCalc.getTimes(new Date(), 51.5, -0.1);\n\n// format sunrise time from the Date object\nvar sunriseStr = times.sunrise.getHours() + ':' + times.sunrise.getMinutes();\n\n// get position of the sun (azimuth and altitude) at today's sunrise\nvar sunrisePos = SunCalc.getPosition(times.sunrise, 51.5, -0.1);\n\n// get sunrise azimuth in degrees\nvar sunriseAzimuth = sunrisePos.azimuth * 180 / Math.PI;\n```\n\nSunCalc is also available as an NPM package:\n\n```bash\n$ npm install suncalc\n```\n\n```js\nvar SunCalc = require('suncalc');\n```\n\n\n## Reference\n\n### Sunlight times\n\n```javascript\nSunCalc.getTimes(/*Date*/ date, /*Number*/ latitude, /*Number*/ longitude)\n```\n\nReturns an object with the following properties (each is a `Date` object):\n\n| Property        | Description                                                              |\n| --------------- | ------------------------------------------------------------------------ |\n| `sunrise`       | sunrise (top edge of the sun appears on the horizon)                     |\n| `sunriseEnd`    | sunrise ends (bottom edge of the sun touches the horizon)                |\n| `goldenHourEnd` | morning golden hour (soft light, best time for photography) ends         |\n| `solarNoon`     | solar noon (sun is in the highest position)                              |\n| `goldenHour`    | evening golden hour starts                                               |\n| `sunsetStart`   | sunset starts (bottom edge of the sun touches the horizon)               |\n| `sunset`        | sunset (sun disappears below the horizon, evening civil twilight starts) |\n| `dusk`          | dusk (evening nautical twilight starts)                                  |\n| `nauticalDusk`  | nautical dusk (evening astronomical twilight starts)                     |\n| `night`         | night starts (dark enough for astronomical observations)                 |\n| `nadir`         | nadir (darkest moment of the night, sun is in the lowest position)       |\n| `nightEnd`      | night ends (morning astronomical twilight starts)                        |\n| `nauticalDawn`  | nautical dawn (morning nautical twilight starts)                         |\n| `dawn`          | dawn (morning nautical twilight ends, morning civil twilight starts)     |\n\n```javascript\nSunCalc.addTime(/*Number*/ angleInDegrees, /*String*/ morningName, /*String*/ eveningName)\n```\n\nAdds a custom time when the sun reaches the given angle to results returned by `SunCalc.getTimes`.\n\n`SunCalc.times` property contains all currently defined times.\n\n\n### Sun position\n\n```javascript\nSunCalc.getPosition(/*Date*/ timeAndDate, /*Number*/ latitude, /*Number*/ longitude)\n```\n\nReturns an object with the following properties:\n\n * `altitude`: sun altitude above the horizon in radians,\n e.g. `0` at the horizon and `PI/2` at the zenith (straight over your head)\n * `azimuth`: sun azimuth in radians (direction along the horizon, measured from south to west),\n e.g. `0` is south and `Math.PI * 3/4` is northwest\n\n\n### Moon position\n\n```javascript\nSunCalc.getMoonPosition(/*Date*/ timeAndDate, /*Number*/ latitude, /*Number*/ longitude)\n```\n\nReturns an object with the following properties:\n\n * `altitude`: moon altitude above the horizon in radians\n * `azimuth`: moon azimuth in radians\n * `distance`: distance to moon in kilometers\n\n\n### Moon illumination\n\n```javascript\nSunCalc.getMoonIllumination(/*Date*/ timeAndDate)\n```\n\nReturns an object with the following properties:\n\n * `fraction`: illuminated fraction of the moon; varies from `0.0` (new moon) to `1.0` (full moon)\n * `phase`: moon phase; varies from `0.0` to `1.0`, described below\n * `angle`: midpoint angle in radians of the illuminated limb of the moon reckoned eastward from the north point of the disk;\n the moon is waxing if the angle is negative, and waning if positive\n\nMoon phase value should be interpreted like this:\n\n| Phase | Name            |\n| -----:| --------------- |\n| 0     | New Moon        |\n|       | Waxing Crescent |\n| 0.25  | First Quarter   |\n|       | Waxing Gibbous  |\n| 0.5   | Full Moon       |\n|       | Waning Gibbous  |\n| 0.75  | Last Quarter    |\n|       | Waning Crescent |\n\n\n## Changelog\n\n#### 1.5.1 &mdash; May 16, 2014\n\n- Exposed `SunCalc.times` property with defined daylight times.\n- Slightly improved `SunCalc.getTimes` performance.\n\n#### 1.4.0 &mdash; Apr 10, 2014\n\n- Added `phase` to `SunCalc.getMoonIllumination` results (moon phase).\n- Switched from mocha to tape for tests.\n\n#### 1.3.0 &mdash; Feb 21, 2014\n\n- Added `SunCalc.getMoonIllumination` (in place of `getMoonFraction`) that returns an object with `fraction` and `angle`\n(angle of illuminated limb of the moon).\n\n#### 1.2.0 &mdash; Mar 07, 2013\n\n- Added `SunCalc.getMoonFraction` function that returns illuminated fraction of the moon.\n\n#### 1.1.0 &mdash; Mar 06, 2013\n\n- Added `SunCalc.getMoonPosition` function.\n- Added nadir (darkest time of the day, middle of the night).\n- Added tests.\n\n#### 1.0.0 &mdash; Dec 07, 2011\n\n- Published to NPM.\n- Added `SunCalc.addTime` function.\n\n#### 0.0.0 &mdash; Aug 25, 2011\n\n- First commit.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mourner/suncalc/issues"
  },
  "_id": "suncalc@1.6.0",
  "_from": "suncalc@~1.6.0"
}
